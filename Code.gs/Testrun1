function formatInvoiceSheet(newSheet, invoice) {
  const managementEmails = [
    "alex.rea@casinosnaks.com",
    "ceci.pagnozzi@casinosnaks.com",
    "jim.rea@casinosnaks.com",
    "penny.rea@casinosnaks.com",
    "jprea8@gmail.com"
  ]; // Management emails

  // Set Invoice Metadata
  newSheet.getRange("A1").setValue("Invoice Number: " + (invoice.DocNumber || "N/A"));
  newSheet.getRange("A2").setValue("Date: " + (invoice.TxnDate || "N/A"));
  newSheet.getRange("A3").setValue("Customer: " + (invoice.CustomerRef ? invoice.CustomerRef.name : "Unknown"));

  // Auto-updating total
  newSheet.getRange("A4").setFormula('="Total: $" & SUM(D7:D)');

  // Set headers
  newSheet.getRange("A6").setValue("Item");
  newSheet.getRange("B6").setValue("Quantity");
  newSheet.getRange("C6").setValue("Rate");
  newSheet.getRange("D6").setValue("Amount");
  newSheet.getRange("E6").setValue("ItemRef");

  let row = 7;

  if (invoice.Line && invoice.Line.length > 0) {
    invoice.Line.forEach(function (line) {
      if (line.SalesItemLineDetail) {
        const itemRef = line.SalesItemLineDetail.ItemRef ? line.SalesItemLineDetail.ItemRef.value : "N/A";
        const itemName = (itemRef && itemRef !== "N/A") ? getItemDetailsById(itemRef) : "Unknown";

        // Set item details
        newSheet.getRange("A" + row).setValue(itemName);
        newSheet.getRange("B" + row).setValue(line.SalesItemLineDetail.Qty || 0);
        newSheet.getRange("C" + row).setValue(line.SalesItemLineDetail.UnitPrice || 0);
        newSheet.getRange("D" + row).setFormula("=B" + row + "*C" + row);
        newSheet.getRange("E" + row).setValue(itemRef);

        row++;
      }
    });
  } else {
    newSheet.getRange("A7").setValue("‚ö†Ô∏è No items found for this invoice.");
  }

  // Add checkboxes for pushing changes
  newSheet.getRange("D1").setValue("Push Changes to QBO");
  newSheet.getRange("D2").insertCheckboxes();
  newSheet.getRange("D3").insertCheckboxes();

  // Add checkboxes for sending PDF to Gchat
  newSheet.getRange("E1").setValue("Send PDF to Gchat");
  newSheet.getRange("E2").insertCheckboxes().setValue(false);
  newSheet.getRange("E3").insertCheckboxes().setValue(false);

  // Add "Apply Special Pricing" checkbox setup
  newSheet.getRange("C1").setValue("Apply Special Pricing");
  newSheet.getRange("C2").insertCheckboxes().setValue(false);
  newSheet.getRange("C3").insertCheckboxes().setValue(false);

  // Add dropdown for selecting user
  newSheet.getRange("F1").setValue("Select Name");
  const dropdownValues = ["TABLET 1", "Alex", "Angel", "Ceci", "Ismael", "Jim", "Penny", "Richard"];
  const rule = SpreadsheetApp.newDataValidation()
    .requireValueInList(dropdownValues)
    .setAllowInvalid(false)
    .build();
  newSheet.getRange("F2").setDataValidation(rule);

  // üîí Lock the entire sheet first
  const protection = newSheet.protect().setDescription("Invoice Sheet Protection");
  protection.addEditors(managementEmails);
  protection.removeEditors(protection.getEditors().filter(editor => !managementEmails.includes(editor.getEmail())));

  // ‚úÖ Define unprotected ranges (only editable by non-management)
  let unprotectedRanges = [
    newSheet.getRange(7, 2, row - 7, 1), // Quantities (Column B)
    newSheet.getRange("E2:E3"),           // Checkboxes for sending PDF to Gchat
    newSheet.getRange("F2"),              // Name selection dropdown
    newSheet.getRange("C2:C3")            // Checkboxes for "Apply Special Pricing"
  ];

  protection.setUnprotectedRanges(unprotectedRanges);

  // üé® Formatting: Wrap Text, Adjust Sizes, Borders, and Freezing
  const fullRange = newSheet.getRange(1, 1, newSheet.getMaxRows(), newSheet.getMaxColumns());
  fullRange.setWrap(true); // Wrap text
  fullRange.setVerticalAlignment("middle"); // Align text to the middle vertically

  // Double width for Column A
  newSheet.setColumnWidth(1, newSheet.getColumnWidth(1) * 2);

  // Double row heights for better visibility (bulk setting for better performance)
  const rowHeights = Array.from({ length: row }, (_, i) => newSheet.getRowHeight(i + 1) * 2);
  rowHeights.forEach((height, i) => {
    newSheet.setRowHeight(i + 1, height);
  });

  // ‚ûñ Add dotted horizontal borders between rows
  newSheet.getRange(7, 1, row - 7, 5).setBorder(false, false, true, false, false, false, "black", SpreadsheetApp.BorderStyle.DOTTED);

  // ‚ûñ Add gray vertical lines between columns (middle separators)
  newSheet.getRange(7, 2, row - 7, 4).setBorder(false, true, false, true, false, false, "#cccccc", SpreadsheetApp.BorderStyle.SOLID);

  // ‚ùÑÔ∏è Freeze Column A
  newSheet.setFrozenColumns(1);

  Logger.log("‚úÖ Entire sheet formatted: Wrapped text, doubled row heights, middle alignment, borders, and frozen Column A.");
}
